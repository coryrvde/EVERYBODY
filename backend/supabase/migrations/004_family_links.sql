-- Add role to profiles and introduce family linking tables

-- Add role column to profiles if not exists
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'profiles' AND column_name = 'role'
  ) THEN
    ALTER TABLE public.profiles ADD COLUMN role TEXT CHECK (role IN ('parent','child'));
  END IF;
END $$;

-- Table for parent-child links using auth.users IDs via profiles.id
CREATE TABLE IF NOT EXISTS public.family_links (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  parent_user_id UUID REFERENCES public.profiles(id) ON DELETE CASCADE NOT NULL,
  child_user_id UUID REFERENCES public.profiles(id) ON DELETE CASCADE NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
  UNIQUE(parent_user_id, child_user_id)
);

-- Table for short-lived link codes generated by parents
CREATE TABLE IF NOT EXISTS public.link_codes (
  code TEXT PRIMARY KEY,
  parent_user_id UUID REFERENCES public.profiles(id) ON DELETE CASCADE NOT NULL,
  expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
  used BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- RLS policies
ALTER TABLE public.family_links ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.link_codes ENABLE ROW LEVEL SECURITY;

-- Family links: a user can see links where they are parent or child
CREATE POLICY "Users can view own family links" ON public.family_links
  FOR SELECT USING (auth.uid() = parent_user_id OR auth.uid() = child_user_id);

-- Parents can create links with their user id as parent
CREATE POLICY "Parents can insert own family links" ON public.family_links
  FOR INSERT WITH CHECK (auth.uid() = parent_user_id);

-- Link codes: parents can manage their own codes; children can check a code by value
CREATE POLICY "Parents manage own link codes" ON public.link_codes
  USING (auth.uid() = parent_user_id)
  WITH CHECK (auth.uid() = parent_user_id);

-- Allow anonymous check by code value only to read minimally needed columns
GRANT SELECT (code, parent_user_id, expires_at, used) ON public.link_codes TO anon, authenticated;


